{"ast":null,"code":"import React from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";const SuggestionContainer=styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  padding: 12px;\n  margin-top: 8px;\n  opacity: ${_ref=>{let{isLoading}=_ref;return isLoading?0:1;}};\n  transition: opacity 0.3s ease;\n`;const SuggestionChip=styled.button`\n  background: #f0f4f8;\n  border: 1px solid #e2e8f0;\n  border-radius: 20px;\n  padding: 8px 16px;\n  font-size: 14px;\n  color: #2d3748;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  white-space: nowrap;\n\n  &:hover {\n    background: #e2e8f0;\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  }\n`;const SuggestedQuestions=_ref2=>{let{suggestions,onSuggestionClick,isLoading=false}=_ref2;return/*#__PURE__*/_jsx(SuggestionContainer,{isLoading:isLoading,children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(SuggestionChip,{onClick:()=>onSuggestionClick(suggestion),children:suggestion},index))});};export default SuggestedQuestions;","map":{"version":3,"names":["React","styled","jsx","_jsx","SuggestionContainer","div","_ref","isLoading","SuggestionChip","button","SuggestedQuestions","_ref2","suggestions","onSuggestionClick","children","map","suggestion","index","onClick"],"sources":["C:/Users/Godso/new sic app/src/components/SuggestedQuestions.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface SuggestedQuestionsProps {\r\n  suggestions: string[];\r\n  onSuggestionClick: (suggestion: string) => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\ninterface SuggestionContainerProps {\r\n  isLoading: boolean;\r\n}\r\n\r\nconst SuggestionContainer = styled.div<SuggestionContainerProps>`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  padding: 12px;\r\n  margin-top: 8px;\r\n  opacity: ${({ isLoading }) => isLoading ? 0 : 1};\r\n  transition: opacity 0.3s ease;\r\n`;\r\n\r\nconst SuggestionChip = styled.button`\r\n  background: #f0f4f8;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 20px;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  color: #2d3748;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n  white-space: nowrap;\r\n\r\n  &:hover {\r\n    background: #e2e8f0;\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(0);\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n  }\r\n`;\r\n\r\nconst SuggestedQuestions: React.FC<SuggestedQuestionsProps> = ({\r\n  suggestions,\r\n  onSuggestionClick,\r\n  isLoading = false\r\n}) => {\r\n  return (\r\n    <SuggestionContainer isLoading={isLoading}>\r\n      {suggestions.map((suggestion, index) => (\r\n        <SuggestionChip\r\n          key={index}\r\n          onClick={() => onSuggestionClick(suggestion)}\r\n        >\r\n          {suggestion}\r\n        </SuggestionChip>\r\n      ))}\r\n    </SuggestionContainer>\r\n  );\r\n};\r\n\r\nexport default SuggestedQuestions; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAYvC,KAAM,CAAAC,mBAAmB,CAAGH,MAAM,CAACI,GAA6B;AAChE;AACA;AACA;AACA;AACA;AACA,aAAaC,IAAA,MAAC,CAAEC,SAAU,CAAC,CAAAD,IAAA,OAAK,CAAAC,SAAS,CAAG,CAAC,CAAG,CAAC;AACjD;AACA,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGP,MAAM,CAACQ,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,kBAAqD,CAAGC,KAAA,EAIxD,IAJyD,CAC7DC,WAAW,CACXC,iBAAiB,CACjBN,SAAS,CAAG,KACd,CAAC,CAAAI,KAAA,CACC,mBACER,IAAA,CAACC,mBAAmB,EAACG,SAAS,CAAEA,SAAU,CAAAO,QAAA,CACvCF,WAAW,CAACG,GAAG,CAAC,CAACC,UAAU,CAAEC,KAAK,gBACjCd,IAAA,CAACK,cAAc,EAEbU,OAAO,CAAEA,CAAA,GAAML,iBAAiB,CAACG,UAAU,CAAE,CAAAF,QAAA,CAE5CE,UAAU,EAHNC,KAIS,CACjB,CAAC,CACiB,CAAC,CAE1B,CAAC,CAED,cAAe,CAAAP,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}