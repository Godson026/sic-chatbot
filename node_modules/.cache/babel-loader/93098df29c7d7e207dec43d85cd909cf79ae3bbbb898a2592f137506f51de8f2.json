{"ast":null,"code":"// Professional response templates for consistent tone\nconst responseTemplates = {\n  greeting: \"Thank you for reaching out to SIC Life. I'm here to assist you with {topic}.\",\n  clarification: \"To better assist you with {topic}, could you please provide more details about {detail}?\",\n  followUp: \"Is there anything specific about {topic} you'd like to know more about?\",\n  handoff: \"For this specific request about {topic}, I'd be happy to connect you with one of our experienced agents who can provide more detailed assistance.\",\n  documentation: \"For {topic}, you'll need the following documents: {documents}. Would you like me to explain the process in detail?\",\n  location: \"Our {service} services are available at all SIC Life branches across Ghana. The nearest branch to assist you is {branch}.\"\n};\n\n// Comprehensive suggestion map with professional, Ghana-specific content\nexport const suggestionMap = {\n  default: [\"What insurance solutions does SIC Life offer?\", \"I need guidance on choosing the right insurance plan\", \"How can I speak with a customer service representative?\", \"What are the ways to pay my premium?\", \"I need assistance with a claim\", \"Where is the nearest SIC Life branch?\"],\n  products: [\"Could you explain the different types of life insurance policies?\", \"Tell me about SIC Life's education savings plans\", \"What investment-linked policies do you offer?\", \"Do you have group insurance for organizations?\", \"What funeral insurance options are available?\", \"How does your pension scheme work?\"],\n  payment: [\"What are the accepted premium payment methods?\", \"Can I pay using Mobile Money (MTN, Vodafone, AirtelTigo)?\", \"How do I set up automatic premium deductions?\", \"What's the grace period for missed payments?\", \"Can I pay my premium at any SIC Life branch?\", \"How do I update my payment information?\"],\n  claims: [\"What's the process for filing a claim?\", \"Which documents are required for a death claim?\", \"How long does the claims process take?\", \"Can I track my claim status online?\", \"What's the procedure for maturity claims?\", \"How do I submit additional claim documents?\"],\n  policy: [\"How do I access my policy information?\", \"Can I modify my policy coverage?\", \"How do I update my beneficiaries?\", \"What's my policy's current cash value?\", \"How do I reinstate a lapsed policy?\", \"Can I get a duplicate policy document?\"],\n  agent: [\"I'd like to schedule a meeting with an agent\", \"What are your branch working hours?\", \"Can I get assistance via WhatsApp?\", \"How do I reach your customer care team?\", \"Is there an agent near my location?\", \"Can someone visit me for policy discussion?\"],\n  education: [\"How does the Education Plan Plus work?\", \"What's the minimum premium for education plans?\", \"Can I add multiple children to one plan?\", \"What happens if I can't continue payments?\", \"Are university fees covered abroad?\", \"How flexible are the payment terms?\"],\n  investment: [\"What investment returns can I expect?\", \"How safe are my invested funds?\", \"Can I withdraw partial amounts?\", \"What's the minimum investment period?\", \"Do you offer unit-linked policies?\", \"How are investment profits taxed?\"]\n};\n\n// Enhanced topic identifiers with Ghana-specific terms\nconst topicIdentifiers = {\n  products: ['insurance', 'plan', 'coverage', 'policy', 'protection', 'funeral', 'education', 'group', 'pension', 'investment'],\n  payment: ['pay', 'premium', 'momo', 'mobile money', 'bank', 'deduction', 'salary', 'grace period', 'due', 'automatic', 'payment'],\n  claims: ['claim', 'death', 'maturity', 'process', 'document', 'file', 'submit', 'beneficiary', 'compensation'],\n  policy: ['policy', 'coverage', 'beneficiary', 'document', 'modify', 'change', 'update', 'information', 'details'],\n  agent: ['agent', 'branch', 'office', 'visit', 'contact', 'whatsapp', 'representative', 'customer service', 'location'],\n  education: ['education', 'school', 'university', 'student', 'child', 'academic', 'study', 'college', 'abroad'],\n  investment: ['investment', 'returns', 'interest', 'fund', 'profit', 'withdraw', 'unit', 'linked', 'growth']\n};\n\n// Get topic from message with improved context awareness\nexport const getTopicFromSuggestion = text => {\n  const lowercaseText = text.toLowerCase();\n\n  // Check each topic's keywords\n  for (const [topic, keywords] of Object.entries(topicIdentifiers)) {\n    if (keywords.some(keyword => lowercaseText.includes(keyword))) {\n      return topic;\n    }\n  }\n  return 'default';\n};\n\n// Get suggestions with enhanced context awareness\nexport const getSuggestions = (context = {}) => {\n  const {\n    lastMessage = '',\n    category,\n    activeTopic,\n    userIntent\n  } = context;\n\n  // If there's an active topic, mix current topic with related suggestions\n  if (activeTopic && suggestionMap[activeTopic]) {\n    return getNextSuggestions(activeTopic);\n  }\n\n  // Determine topic from last message with intent consideration\n  if (lastMessage) {\n    const topic = getTopicFromSuggestion(lastMessage);\n    return getNextSuggestions(topic);\n  }\n  return suggestionMap.default;\n};\n\n// Get related topics with improved relevance\nexport const getRelatedTopics = currentTopic => {\n  const topicRelations = {\n    default: ['products', 'agent', 'claims'],\n    products: ['investment', 'education', 'policy'],\n    payment: ['policy', 'agent', 'claims'],\n    claims: ['policy', 'agent', 'payment'],\n    policy: ['payment', 'claims', 'products'],\n    agent: ['claims', 'policy', 'products'],\n    education: ['products', 'investment', 'payment'],\n    investment: ['products', 'policy', 'education']\n  };\n  return topicRelations[currentTopic] || ['default'];\n};\n\n// Get next suggestions with improved context mixing\nexport const getNextSuggestions = currentTopic => {\n  const relatedTopics = getRelatedTopics(currentTopic);\n  const suggestions = [];\n\n  // Add 3-4 suggestions from current topic\n  const currentTopicSuggestions = [...suggestionMap[currentTopic]].sort(() => Math.random() - 0.5).slice(0, Math.floor(Math.random() * 2) + 3);\n  suggestions.push(...currentTopicSuggestions);\n\n  // Add 1-2 suggestions from related topics\n  relatedTopics.forEach(topic => {\n    const relatedSuggestions = [...suggestionMap[topic]].sort(() => Math.random() - 0.5).slice(0, 1);\n    suggestions.push(...relatedSuggestions);\n  });\n\n  // Shuffle and limit to 5 suggestions for better UX\n  return suggestions.sort(() => Math.random() - 0.5).slice(0, 5);\n};\n\n// Format response with professional tone\nexport const formatResponse = (template, params) => {\n  let response = responseTemplates[template];\n  Object.entries(params).forEach(([key, value]) => {\n    response = response.replace(`{${key}}`, value);\n  });\n  return response;\n};","map":{"version":3,"names":["responseTemplates","greeting","clarification","followUp","handoff","documentation","location","suggestionMap","default","products","payment","claims","policy","agent","education","investment","topicIdentifiers","getTopicFromSuggestion","text","lowercaseText","toLowerCase","topic","keywords","Object","entries","some","keyword","includes","getSuggestions","context","lastMessage","category","activeTopic","userIntent","getNextSuggestions","getRelatedTopics","currentTopic","topicRelations","relatedTopics","suggestions","currentTopicSuggestions","sort","Math","random","slice","floor","push","forEach","relatedSuggestions","formatResponse","template","params","response","key","value","replace"],"sources":["C:/Users/Godso/new sic app/src/services/suggestionService.ts"],"sourcesContent":["import { sicLifeKnowledge } from './knowledgeBase';\r\n\r\nexport type SuggestionTopic = \r\n  | 'default' \r\n  | 'products' \r\n  | 'payment' \r\n  | 'claims' \r\n  | 'policy' \r\n  | 'agent' \r\n  | 'education' \r\n  | 'investment';\r\n\r\ninterface SuggestionContext {\r\n  lastMessage?: string;\r\n  category?: string;\r\n  activeTopic?: SuggestionTopic;\r\n  userIntent?: string;\r\n}\r\n\r\n// Professional response templates for consistent tone\r\nconst responseTemplates = {\r\n  greeting: \"Thank you for reaching out to SIC Life. I'm here to assist you with {topic}.\",\r\n  clarification: \"To better assist you with {topic}, could you please provide more details about {detail}?\",\r\n  followUp: \"Is there anything specific about {topic} you'd like to know more about?\",\r\n  handoff: \"For this specific request about {topic}, I'd be happy to connect you with one of our experienced agents who can provide more detailed assistance.\",\r\n  documentation: \"For {topic}, you'll need the following documents: {documents}. Would you like me to explain the process in detail?\",\r\n  location: \"Our {service} services are available at all SIC Life branches across Ghana. The nearest branch to assist you is {branch}.\"\r\n};\r\n\r\n// Comprehensive suggestion map with professional, Ghana-specific content\r\nexport const suggestionMap: Record<SuggestionTopic, string[]> = {\r\n  default: [\r\n    \"What insurance solutions does SIC Life offer?\",\r\n    \"I need guidance on choosing the right insurance plan\",\r\n    \"How can I speak with a customer service representative?\",\r\n    \"What are the ways to pay my premium?\",\r\n    \"I need assistance with a claim\",\r\n    \"Where is the nearest SIC Life branch?\"\r\n  ],\r\n  products: [\r\n    \"Could you explain the different types of life insurance policies?\",\r\n    \"Tell me about SIC Life's education savings plans\",\r\n    \"What investment-linked policies do you offer?\",\r\n    \"Do you have group insurance for organizations?\",\r\n    \"What funeral insurance options are available?\",\r\n    \"How does your pension scheme work?\"\r\n  ],\r\n  payment: [\r\n    \"What are the accepted premium payment methods?\",\r\n    \"Can I pay using Mobile Money (MTN, Vodafone, AirtelTigo)?\",\r\n    \"How do I set up automatic premium deductions?\",\r\n    \"What's the grace period for missed payments?\",\r\n    \"Can I pay my premium at any SIC Life branch?\",\r\n    \"How do I update my payment information?\"\r\n  ],\r\n  claims: [\r\n    \"What's the process for filing a claim?\",\r\n    \"Which documents are required for a death claim?\",\r\n    \"How long does the claims process take?\",\r\n    \"Can I track my claim status online?\",\r\n    \"What's the procedure for maturity claims?\",\r\n    \"How do I submit additional claim documents?\"\r\n  ],\r\n  policy: [\r\n    \"How do I access my policy information?\",\r\n    \"Can I modify my policy coverage?\",\r\n    \"How do I update my beneficiaries?\",\r\n    \"What's my policy's current cash value?\",\r\n    \"How do I reinstate a lapsed policy?\",\r\n    \"Can I get a duplicate policy document?\"\r\n  ],\r\n  agent: [\r\n    \"I'd like to schedule a meeting with an agent\",\r\n    \"What are your branch working hours?\",\r\n    \"Can I get assistance via WhatsApp?\",\r\n    \"How do I reach your customer care team?\",\r\n    \"Is there an agent near my location?\",\r\n    \"Can someone visit me for policy discussion?\"\r\n  ],\r\n  education: [\r\n    \"How does the Education Plan Plus work?\",\r\n    \"What's the minimum premium for education plans?\",\r\n    \"Can I add multiple children to one plan?\",\r\n    \"What happens if I can't continue payments?\",\r\n    \"Are university fees covered abroad?\",\r\n    \"How flexible are the payment terms?\"\r\n  ],\r\n  investment: [\r\n    \"What investment returns can I expect?\",\r\n    \"How safe are my invested funds?\",\r\n    \"Can I withdraw partial amounts?\",\r\n    \"What's the minimum investment period?\",\r\n    \"Do you offer unit-linked policies?\",\r\n    \"How are investment profits taxed?\"\r\n  ]\r\n};\r\n\r\n// Enhanced topic identifiers with Ghana-specific terms\r\nconst topicIdentifiers = {\r\n  products: [\r\n    'insurance', 'plan', 'coverage', 'policy', 'protection',\r\n    'funeral', 'education', 'group', 'pension', 'investment'\r\n  ],\r\n  payment: [\r\n    'pay', 'premium', 'momo', 'mobile money', 'bank', 'deduction',\r\n    'salary', 'grace period', 'due', 'automatic', 'payment'\r\n  ],\r\n  claims: [\r\n    'claim', 'death', 'maturity', 'process', 'document',\r\n    'file', 'submit', 'beneficiary', 'compensation'\r\n  ],\r\n  policy: [\r\n    'policy', 'coverage', 'beneficiary', 'document', 'modify',\r\n    'change', 'update', 'information', 'details'\r\n  ],\r\n  agent: [\r\n    'agent', 'branch', 'office', 'visit', 'contact', 'whatsapp',\r\n    'representative', 'customer service', 'location'\r\n  ],\r\n  education: [\r\n    'education', 'school', 'university', 'student', 'child',\r\n    'academic', 'study', 'college', 'abroad'\r\n  ],\r\n  investment: [\r\n    'investment', 'returns', 'interest', 'fund', 'profit',\r\n    'withdraw', 'unit', 'linked', 'growth'\r\n  ]\r\n};\r\n\r\n// Get topic from message with improved context awareness\r\nexport const getTopicFromSuggestion = (text: string): SuggestionTopic => {\r\n  const lowercaseText = text.toLowerCase();\r\n\r\n  // Check each topic's keywords\r\n  for (const [topic, keywords] of Object.entries(topicIdentifiers)) {\r\n    if (keywords.some(keyword => lowercaseText.includes(keyword))) {\r\n      return topic as SuggestionTopic;\r\n    }\r\n  }\r\n\r\n  return 'default';\r\n};\r\n\r\n// Get suggestions with enhanced context awareness\r\nexport const getSuggestions = (context: SuggestionContext = {}): string[] => {\r\n  const { lastMessage = '', category, activeTopic, userIntent } = context;\r\n\r\n  // If there's an active topic, mix current topic with related suggestions\r\n  if (activeTopic && suggestionMap[activeTopic]) {\r\n    return getNextSuggestions(activeTopic);\r\n  }\r\n\r\n  // Determine topic from last message with intent consideration\r\n  if (lastMessage) {\r\n    const topic = getTopicFromSuggestion(lastMessage);\r\n    return getNextSuggestions(topic);\r\n  }\r\n\r\n  return suggestionMap.default;\r\n};\r\n\r\n// Get related topics with improved relevance\r\nexport const getRelatedTopics = (currentTopic: SuggestionTopic): SuggestionTopic[] => {\r\n  const topicRelations: Record<SuggestionTopic, SuggestionTopic[]> = {\r\n    default: ['products', 'agent', 'claims'],\r\n    products: ['investment', 'education', 'policy'],\r\n    payment: ['policy', 'agent', 'claims'],\r\n    claims: ['policy', 'agent', 'payment'],\r\n    policy: ['payment', 'claims', 'products'],\r\n    agent: ['claims', 'policy', 'products'],\r\n    education: ['products', 'investment', 'payment'],\r\n    investment: ['products', 'policy', 'education']\r\n  };\r\n\r\n  return topicRelations[currentTopic] || ['default'];\r\n};\r\n\r\n// Get next suggestions with improved context mixing\r\nexport const getNextSuggestions = (currentTopic: SuggestionTopic): string[] => {\r\n  const relatedTopics = getRelatedTopics(currentTopic);\r\n  const suggestions: string[] = [];\r\n\r\n  // Add 3-4 suggestions from current topic\r\n  const currentTopicSuggestions = [...suggestionMap[currentTopic]]\r\n    .sort(() => Math.random() - 0.5)\r\n    .slice(0, Math.floor(Math.random() * 2) + 3);\r\n  suggestions.push(...currentTopicSuggestions);\r\n\r\n  // Add 1-2 suggestions from related topics\r\n  relatedTopics.forEach(topic => {\r\n    const relatedSuggestions = [...suggestionMap[topic]]\r\n      .sort(() => Math.random() - 0.5)\r\n      .slice(0, 1);\r\n    suggestions.push(...relatedSuggestions);\r\n  });\r\n\r\n  // Shuffle and limit to 5 suggestions for better UX\r\n  return suggestions\r\n    .sort(() => Math.random() - 0.5)\r\n    .slice(0, 5);\r\n};\r\n\r\n// Format response with professional tone\r\nexport const formatResponse = (template: keyof typeof responseTemplates, params: Record<string, string>): string => {\r\n  let response = responseTemplates[template];\r\n  Object.entries(params).forEach(([key, value]) => {\r\n    response = response.replace(`{${key}}`, value);\r\n  });\r\n  return response;\r\n}; "],"mappings":"AAmBA;AACA,MAAMA,iBAAiB,GAAG;EACxBC,QAAQ,EAAE,8EAA8E;EACxFC,aAAa,EAAE,0FAA0F;EACzGC,QAAQ,EAAE,yEAAyE;EACnFC,OAAO,EAAE,mJAAmJ;EAC5JC,aAAa,EAAE,oHAAoH;EACnIC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,OAAO,MAAMC,aAAgD,GAAG;EAC9DC,OAAO,EAAE,CACP,+CAA+C,EAC/C,sDAAsD,EACtD,yDAAyD,EACzD,sCAAsC,EACtC,gCAAgC,EAChC,uCAAuC,CACxC;EACDC,QAAQ,EAAE,CACR,mEAAmE,EACnE,kDAAkD,EAClD,+CAA+C,EAC/C,gDAAgD,EAChD,+CAA+C,EAC/C,oCAAoC,CACrC;EACDC,OAAO,EAAE,CACP,gDAAgD,EAChD,2DAA2D,EAC3D,+CAA+C,EAC/C,8CAA8C,EAC9C,8CAA8C,EAC9C,yCAAyC,CAC1C;EACDC,MAAM,EAAE,CACN,wCAAwC,EACxC,iDAAiD,EACjD,wCAAwC,EACxC,qCAAqC,EACrC,2CAA2C,EAC3C,6CAA6C,CAC9C;EACDC,MAAM,EAAE,CACN,wCAAwC,EACxC,kCAAkC,EAClC,mCAAmC,EACnC,wCAAwC,EACxC,qCAAqC,EACrC,wCAAwC,CACzC;EACDC,KAAK,EAAE,CACL,8CAA8C,EAC9C,qCAAqC,EACrC,oCAAoC,EACpC,yCAAyC,EACzC,qCAAqC,EACrC,6CAA6C,CAC9C;EACDC,SAAS,EAAE,CACT,wCAAwC,EACxC,iDAAiD,EACjD,0CAA0C,EAC1C,4CAA4C,EAC5C,qCAAqC,EACrC,qCAAqC,CACtC;EACDC,UAAU,EAAE,CACV,uCAAuC,EACvC,iCAAiC,EACjC,iCAAiC,EACjC,uCAAuC,EACvC,oCAAoC,EACpC,mCAAmC;AAEvC,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAG;EACvBP,QAAQ,EAAE,CACR,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EACvD,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,CACzD;EACDC,OAAO,EAAE,CACP,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,WAAW,EAC7D,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,CACxD;EACDC,MAAM,EAAE,CACN,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EACnD,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,CAChD;EACDC,MAAM,EAAE,CACN,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EACzD,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,CAC7C;EACDC,KAAK,EAAE,CACL,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAC3D,gBAAgB,EAAE,kBAAkB,EAAE,UAAU,CACjD;EACDC,SAAS,EAAE,CACT,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,EACvD,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,CACzC;EACDC,UAAU,EAAE,CACV,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EACrD,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ;AAE1C,CAAC;;AAED;AACA,OAAO,MAAME,sBAAsB,GAAIC,IAAY,IAAsB;EACvE,MAAMC,aAAa,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;;EAExC;EACA,KAAK,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACR,gBAAgB,CAAC,EAAE;IAChE,IAAIM,QAAQ,CAACG,IAAI,CAACC,OAAO,IAAIP,aAAa,CAACQ,QAAQ,CAACD,OAAO,CAAC,CAAC,EAAE;MAC7D,OAAOL,KAAK;IACd;EACF;EAEA,OAAO,SAAS;AAClB,CAAC;;AAED;AACA,OAAO,MAAMO,cAAc,GAAGA,CAACC,OAA0B,GAAG,CAAC,CAAC,KAAe;EAC3E,MAAM;IAAEC,WAAW,GAAG,EAAE;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGJ,OAAO;;EAEvE;EACA,IAAIG,WAAW,IAAIzB,aAAa,CAACyB,WAAW,CAAC,EAAE;IAC7C,OAAOE,kBAAkB,CAACF,WAAW,CAAC;EACxC;;EAEA;EACA,IAAIF,WAAW,EAAE;IACf,MAAMT,KAAK,GAAGJ,sBAAsB,CAACa,WAAW,CAAC;IACjD,OAAOI,kBAAkB,CAACb,KAAK,CAAC;EAClC;EAEA,OAAOd,aAAa,CAACC,OAAO;AAC9B,CAAC;;AAED;AACA,OAAO,MAAM2B,gBAAgB,GAAIC,YAA6B,IAAwB;EACpF,MAAMC,cAA0D,GAAG;IACjE7B,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;IACxCC,QAAQ,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,QAAQ,CAAC;IAC/CC,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;IACtCC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;IACtCC,MAAM,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;IACzCC,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC;IACvCC,SAAS,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,SAAS,CAAC;IAChDC,UAAU,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW;EAChD,CAAC;EAED,OAAOsB,cAAc,CAACD,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC;AACpD,CAAC;;AAED;AACA,OAAO,MAAMF,kBAAkB,GAAIE,YAA6B,IAAe;EAC7E,MAAME,aAAa,GAAGH,gBAAgB,CAACC,YAAY,CAAC;EACpD,MAAMG,WAAqB,GAAG,EAAE;;EAEhC;EACA,MAAMC,uBAAuB,GAAG,CAAC,GAAGjC,aAAa,CAAC6B,YAAY,CAAC,CAAC,CAC7DK,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,KAAK,CAAC,CAAC,EAAEF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9CJ,WAAW,CAACO,IAAI,CAAC,GAAGN,uBAAuB,CAAC;;EAE5C;EACAF,aAAa,CAACS,OAAO,CAAC1B,KAAK,IAAI;IAC7B,MAAM2B,kBAAkB,GAAG,CAAC,GAAGzC,aAAa,CAACc,KAAK,CAAC,CAAC,CACjDoB,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACdL,WAAW,CAACO,IAAI,CAAC,GAAGE,kBAAkB,CAAC;EACzC,CAAC,CAAC;;EAEF;EACA,OAAOT,WAAW,CACfE,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAGA,CAACC,QAAwC,EAAEC,MAA8B,KAAa;EAClH,IAAIC,QAAQ,GAAGpD,iBAAiB,CAACkD,QAAQ,CAAC;EAC1C3B,MAAM,CAACC,OAAO,CAAC2B,MAAM,CAAC,CAACJ,OAAO,CAAC,CAAC,CAACM,GAAG,EAAEC,KAAK,CAAC,KAAK;IAC/CF,QAAQ,GAAGA,QAAQ,CAACG,OAAO,CAAC,IAAIF,GAAG,GAAG,EAAEC,KAAK,CAAC;EAChD,CAAC,CAAC;EACF,OAAOF,QAAQ;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}