{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Godso\\\\new sic app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Message from './components/Message';\nimport Avatar from './components/Avatar';\nimport { processMessage } from './services/api';\nimport SuggestedQuestions from './components/SuggestedQuestions';\nimport { getSuggestions, getTopicFromSuggestion } from './services/suggestionService';\n\n// Chatbot name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHATBOT_NAME = \"Wofa Ahoto\";\n\n// Suggested responses based on conversation state\nconst getSuggestedResponses = messages => {\n  if (messages.length === 0) return [];\n  const lastMessage = messages[messages.length - 1];\n\n  // If the last message is from the agent, suggest responses based on its content\n  if (lastMessage.sender === 'agent') {\n    const content = lastMessage.content.toLowerCase();\n    if (content.includes('how can i help')) {\n      return [\"I need an insurance quote\", \"How do I make a claim?\", \"Check my policy status\", \"Make a payment\"];\n    }\n    if (content.includes('quote')) {\n      return [\"Tell me about life insurance\", \"What's the minimum coverage?\", \"How much does it cost?\", \"What documents do I need?\"];\n    }\n    if (content.includes('claim')) {\n      return [\"Start a new claim\", \"Track my claim status\", \"Required documents\", \"Speak to an agent\"];\n    }\n    if (content.includes('payment')) {\n      return [\"Pay with Mobile Money\", \"Pay with card\", \"Bank transfer details\", \"Payment due date\"];\n    }\n  }\n\n  // Default suggestions\n  return [\"Get an insurance quote\", \"File a claim\", \"Make a payment\", \"Contact support\"];\n};\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [botState, setBotState] = useState('idle');\n  const messagesEndRef = useRef(null);\n  const [suggestedResponses, setSuggestedResponses] = useState([]);\n  const [activeTopic, setActiveTopic] = useState('default');\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(true);\n\n  // Add welcome message when component mounts\n  useEffect(() => {\n    const welcomeMessage = {\n      id: Date.now().toString(),\n      content: `Hello! I'm ${CHATBOT_NAME}, your SIC Life insurance assistant. How can I help you today?\\n\\nI can help you with:\\n• Insurance quotes\\n• Claims processing\\n• Policy information\\n• Premium payments\\n• General inquiries`,\n      sender: 'agent',\n      timestamp: new Date(),\n      type: 'text'\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n\n  // Update suggested responses when messages change\n  useEffect(() => {\n    setSuggestedResponses(getSuggestedResponses(messages));\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize suggestions\n  useEffect(() => {\n    setSuggestions(getSuggestions({\n      activeTopic: 'default'\n    }));\n  }, []);\n  const handleSendMessage = async (messageText = inputMessage) => {\n    if (!messageText.trim()) return;\n\n    // Hide suggestions while processing\n    setShowSuggestions(false);\n    const userMessage = {\n      id: Date.now().toString(),\n      content: messageText,\n      sender: 'user',\n      timestamp: new Date(),\n      type: 'text'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setBotState('typing');\n    try {\n      const agentMessage = await processMessage(messageText);\n      setMessages(prev => [...prev, agentMessage]);\n\n      // Update suggestions based on the bot's response\n      const newTopic = getTopicFromSuggestion(agentMessage.content);\n\n      // Add a delay for natural feel\n      setTimeout(() => {\n        setActiveTopic(newTopic);\n        setSuggestions(getSuggestions({\n          lastMessage: agentMessage.content,\n          activeTopic: newTopic\n        }));\n        setShowSuggestions(true);\n      }, 500);\n    } catch (error) {\n      console.error('Error processing message:', error);\n      const errorMessage = {\n        id: Date.now().toString(),\n        content: 'Sorry, there was an error processing your message. Please try again.',\n        sender: 'agent',\n        timestamp: new Date(),\n        type: 'text'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setShowSuggestions(true);\n    } finally {\n      setBotState('idle');\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    // Hide current suggestions immediately\n    setShowSuggestions(false);\n\n    // Send the message\n    handleSendMessage(suggestion);\n\n    // Update the topic based on the suggestion\n    const newTopic = getTopicFromSuggestion(suggestion);\n\n    // Update suggestions with a delay for natural feel\n    setTimeout(() => {\n      setActiveTopic(newTopic);\n      setSuggestions(getSuggestions({\n        activeTopic: newTopic\n      }));\n      setShowSuggestions(true);\n    }, 300);\n  };\n  const renderBotState = () => {\n    if (botState === 'idle') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-8 h-8\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 rounded-lg px-4 py-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 mr-2\",\n            children: \"Agent is typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 sic-bg-primary rounded-full animate-bounce\",\n              style: {\n                animationDelay: '0ms'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 sic-bg-primary rounded-full animate-bounce\",\n              style: {\n                animationDelay: '150ms'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 sic-bg-primary rounded-full animate-bounce\",\n              style: {\n                animationDelay: '300ms'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"sic-bg-primary shadow-sm rounded-lg p-4 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 h-10 mr-3\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-white\",\n            children: CHATBOT_NAME\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-white opacity-80\",\n            children: \"Your SIC Life Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"bg-white rounded-lg shadow-sm p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-[600px] overflow-y-auto mb-4 p-4 border rounded-lg bg-gray-50\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n            message: message\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)), renderBotState(), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-4\",\n          children: [showSuggestions && /*#__PURE__*/_jsxDEV(SuggestedQuestions, {\n            suggestions: suggestions,\n            onSuggestionClick: handleSuggestionClick,\n            isLoading: botState === 'typing'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyPress: e => e.key === 'Enter' && handleSendMessage(),\n              placeholder: \"Type your message...\",\n              className: \"flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\",\n              disabled: botState === 'typing'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSendMessage(),\n              disabled: botState === 'typing' || !inputMessage.trim(),\n              className: \"p-2 bg-green-500 text-white rounded-lg disabled:opacity-50\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"mt-4 text-center text-sm text-gray-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [CHATBOT_NAME, \" - Your trusted SIC Life insurance assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2JF2ByFw3hPkR68jUNokYsgxY/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Message","Avatar","processMessage","SuggestedQuestions","getSuggestions","getTopicFromSuggestion","jsxDEV","_jsxDEV","CHATBOT_NAME","getSuggestedResponses","messages","length","lastMessage","sender","content","toLowerCase","includes","App","_s","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","botState","setBotState","messagesEndRef","suggestedResponses","setSuggestedResponses","activeTopic","setActiveTopic","suggestions","setSuggestions","showSuggestions","setShowSuggestions","welcomeMessage","id","Date","now","toString","timestamp","type","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","messageText","trim","userMessage","prev","agentMessage","newTopic","setTimeout","error","console","errorMessage","handleSuggestionClick","suggestion","renderBotState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","animationDelay","map","message","ref","onSuggestionClick","value","onChange","e","target","onKeyPress","key","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Godso/new sic app/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { PaperAirplaneIcon } from '@heroicons/react/24/solid';\nimport Message from './components/Message';\nimport SuggestedResponses from './components/SuggestedResponses';\nimport Avatar from './components/Avatar';\nimport { Message as MessageType } from './types';\nimport { processMessage } from './services/api';\nimport SuggestedQuestions from './components/SuggestedQuestions';\nimport { getSuggestions, getTopicFromSuggestion, type SuggestionTopic } from './services/suggestionService';\n\n// Chatbot name\nconst CHATBOT_NAME = \"Wofa Ahoto\";\n\n// Suggested responses based on conversation state\nconst getSuggestedResponses = (messages: MessageType[]): string[] => {\n  if (messages.length === 0) return [];\n  \n  const lastMessage = messages[messages.length - 1];\n  \n  // If the last message is from the agent, suggest responses based on its content\n  if (lastMessage.sender === 'agent') {\n    const content = lastMessage.content.toLowerCase();\n    \n    if (content.includes('how can i help')) {\n      return [\n        \"I need an insurance quote\",\n        \"How do I make a claim?\",\n        \"Check my policy status\",\n        \"Make a payment\"\n      ];\n    }\n    \n    if (content.includes('quote')) {\n      return [\n        \"Tell me about life insurance\",\n        \"What's the minimum coverage?\",\n        \"How much does it cost?\",\n        \"What documents do I need?\"\n      ];\n    }\n    \n    if (content.includes('claim')) {\n      return [\n        \"Start a new claim\",\n        \"Track my claim status\",\n        \"Required documents\",\n        \"Speak to an agent\"\n      ];\n    }\n\n    if (content.includes('payment')) {\n      return [\n        \"Pay with Mobile Money\",\n        \"Pay with card\",\n        \"Bank transfer details\",\n        \"Payment due date\"\n      ];\n    }\n  }\n  \n  // Default suggestions\n  return [\n    \"Get an insurance quote\",\n    \"File a claim\",\n    \"Make a payment\",\n    \"Contact support\"\n  ];\n};\n\nfunction App() {\n  const [messages, setMessages] = useState<MessageType[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [botState, setBotState] = useState<'idle' | 'typing'>('idle');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [suggestedResponses, setSuggestedResponses] = useState<string[]>([]);\n  const [activeTopic, setActiveTopic] = useState<SuggestionTopic>('default');\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(true);\n\n  // Add welcome message when component mounts\n  useEffect(() => {\n    const welcomeMessage: MessageType = {\n      id: Date.now().toString(),\n      content: `Hello! I'm ${CHATBOT_NAME}, your SIC Life insurance assistant. How can I help you today?\\n\\nI can help you with:\\n• Insurance quotes\\n• Claims processing\\n• Policy information\\n• Premium payments\\n• General inquiries`,\n      sender: 'agent',\n      timestamp: new Date(),\n      type: 'text'\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n\n  // Update suggested responses when messages change\n  useEffect(() => {\n    setSuggestedResponses(getSuggestedResponses(messages));\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize suggestions\n  useEffect(() => {\n    setSuggestions(getSuggestions({ activeTopic: 'default' }));\n  }, []);\n\n  const handleSendMessage = async (messageText: string = inputMessage) => {\n    if (!messageText.trim()) return;\n\n    // Hide suggestions while processing\n    setShowSuggestions(false);\n\n    const userMessage: MessageType = {\n      id: Date.now().toString(),\n      content: messageText,\n      sender: 'user',\n      timestamp: new Date(),\n      type: 'text'\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setBotState('typing');\n\n    try {\n      const agentMessage = await processMessage(messageText);\n      setMessages(prev => [...prev, agentMessage]);\n\n      // Update suggestions based on the bot's response\n      const newTopic = getTopicFromSuggestion(agentMessage.content);\n      \n      // Add a delay for natural feel\n      setTimeout(() => {\n        setActiveTopic(newTopic);\n        setSuggestions(getSuggestions({ \n          lastMessage: agentMessage.content,\n          activeTopic: newTopic\n        }));\n        setShowSuggestions(true);\n      }, 500);\n\n    } catch (error) {\n      console.error('Error processing message:', error);\n      const errorMessage: MessageType = {\n        id: Date.now().toString(),\n        content: 'Sorry, there was an error processing your message. Please try again.',\n        sender: 'agent',\n        timestamp: new Date(),\n        type: 'text'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setShowSuggestions(true);\n    } finally {\n      setBotState('idle');\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    // Hide current suggestions immediately\n    setShowSuggestions(false);\n    \n    // Send the message\n    handleSendMessage(suggestion);\n    \n    // Update the topic based on the suggestion\n    const newTopic = getTopicFromSuggestion(suggestion);\n    \n    // Update suggestions with a delay for natural feel\n    setTimeout(() => {\n      setActiveTopic(newTopic);\n      setSuggestions(getSuggestions({ activeTopic: newTopic }));\n      setShowSuggestions(true);\n    }, 300);\n  };\n\n  const renderBotState = () => {\n    if (botState === 'idle') return null;\n    \n    return (\n      <div className=\"flex items-center gap-2 mb-4\">\n        <div className=\"w-8 h-8\">\n          <Avatar />\n        </div>\n        <div className=\"bg-gray-100 rounded-lg px-4 py-2\">\n          <div className=\"flex items-center\">\n            <span className=\"text-sm text-gray-500 mr-2\">Agent is typing</span>\n            <div className=\"flex space-x-1\">\n              <div className=\"w-2 h-2 sic-bg-primary rounded-full animate-bounce\" style={{ animationDelay: '0ms' }}></div>\n              <div className=\"w-2 h-2 sic-bg-primary rounded-full animate-bounce\" style={{ animationDelay: '150ms' }}></div>\n              <div className=\"w-2 h-2 sic-bg-primary rounded-full animate-bounce\" style={{ animationDelay: '300ms' }}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <header className=\"sic-bg-primary shadow-sm rounded-lg p-4 mb-4 flex items-center\">\n          <div className=\"w-10 h-10 mr-3\">\n            <Avatar />\n          </div>\n          <div>\n            <h1 className=\"text-2xl font-bold text-white\">{CHATBOT_NAME}</h1>\n            <p className=\"text-sm text-white opacity-80\">Your SIC Life Assistant</p>\n          </div>\n        </header>\n        \n        <main className=\"bg-white rounded-lg shadow-sm p-4\">\n          <div className=\"h-[600px] overflow-y-auto mb-4 p-4 border rounded-lg bg-gray-50\">\n            {messages.map(message => (\n              <Message key={message.id} message={message} />\n            ))}\n            {renderBotState()}\n            <div ref={messagesEndRef} />\n          </div>\n          \n          <div className=\"flex flex-col gap-4\">\n            {showSuggestions && (\n              <SuggestedQuestions\n                suggestions={suggestions}\n                onSuggestionClick={handleSuggestionClick}\n                isLoading={botState === 'typing'}\n              />\n            )}\n\n            <div className=\"flex gap-2\">\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                placeholder=\"Type your message...\"\n                className=\"flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n                disabled={botState === 'typing'}\n              />\n              <button \n                onClick={() => handleSendMessage()}\n                disabled={botState === 'typing' || !inputMessage.trim()}\n                className=\"p-2 bg-green-500 text-white rounded-lg disabled:opacity-50\"\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        </main>\n        \n        <footer className=\"mt-4 text-center text-sm text-gray-500\">\n          <p>{CHATBOT_NAME} - Your trusted SIC Life insurance assistant</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}